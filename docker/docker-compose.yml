version: "3.7"

services:
  app:
    build:
      args:
        user: "node"
      context: ../
      dockerfile: ./docker/api1/Dockerfile
    image: node-docker-app-image
    # image: "node:14.15"
    container_name: node-docker-app
    # user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - ../:/home/node/app
    networks:
      - node-docker
    command: "npm start"

  db:
    image: mysql:8.0
    container_name: node-docker-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE} # docker fetches these from .env file in same dir as docker-compose.yml file
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d #mysql image will automatically import .sql files placed in the /docker-entrypoint-initdb.d directory
      - node-docker_mysql:/var/lib/mysql
    ports:
      - 3307:3306
    networks:
      - node-docker

  nginx:
    image: nginx:1.17-alpine
    container_name: node-docker-nginx
    restart: unless-stopped
    ports:
      - 5000:80
    volumes:
      - ../:/var/www
      - ./nginx:/etc/nginx/conf.d
    networks:
      - node-docker

networks:
  node-docker:
    driver: bridge

volumes:
  node-docker_mysql:
